import bpy
import math
import os

#bpy.ops.object.text_add(enter_editmode=False, align='WORLD', location=(0, 0, 0), scale=(1, 1, 1))

scene = bpy.context.scene
objects = []

word = "LEGGY_FISH"
word_split = word.split('_')
bottom_word = word_split[-1]
word_split.reverse()

#Setup plane
bpy.ops.mesh.primitive_plane_add(size=30, enter_editmode=False, align='WORLD', location=(0, 0, 0), scale=(30, 30, 30))
floor_mesh = bpy.context.active_object
objects.append(floor_mesh)
floor_mat = bpy.data.materials.get("floor")
floor_mesh.data.materials.append(floor_mat)

#setup light
bpy.ops.object.light_add(type='SUN', align='WORLD', location=(0.817, -2.0997, 0.85807), scale=(1, 1, 1))
bpy.context.object.data.energy = 75
objects.append(bpy.context.active_object)


#Setup all text, run backwards
jump = 0
x_size = 0
cam_jump = 0
cam_roty_jump = 0
cam_rotz_jump = 0
for w in word_split:
    bpy.ops.object.text_add(align = 'WORLD', location = (0,0,0))
    word = bpy.context.active_object
    objects.append(word)
    fnt = bpy.data.fonts.load('D:\Comp Sci III\Blender App\impact-font\impact.ttf')
    word.data.body = w
    word.data.font = fnt
    word.rotation_euler[0] = math.radians(90)
    word.data.extrude = 0.2
    bpy.ops.object.convert(target = "MESH")
    word.location.z += (1.35*jump)
    jump += word.dimensions.z
    if (word_split.index(w) == 0):
        x_size = word.dimensions.x
        print("Success!")
    word.dimensions.x = (x_size/word.dimensions.x)*word.dimensions.x
    word.dimensions.x = (x_size/word.dimensions.x)*word.dimensions.x
    #Adds dimensions for cam positioning later
    bpy.context.view_layer.update()
    cam_jump += 0.09

bpy.ops.object.camera_add(location = (0.28279,-0.49618,0.161259), rotation = ( math.radians(114.656), math.radians(0.81659), math.radians(-36.163)))
#bpy.ops.object.camera_add(location = (0.28279,-0.49618,0.161259), rotation = ( math.radians(45), math.radians(0.81659), math.radians(-30)))
cam = bpy.data.objects['Camera']
objects.append(cam)
cam.data.lens = 14
cam.data.clip_start = 0.001
cam.location.x += -1*cam_jump
cam.location.y += -1*cam_jump
#cam.rotation_euler.y += math.radians(cam_roty_jump)
#cam.rotation_euler.z += math.radians(cam_rotz_jump)
cam = bpy.context.active_object
scene.camera = cam
rotation = (math.atan( 0.4*((0.4*(len(bottom_word) / (cam.location.y -0.263767 ))   ))))
print(rotation)
cam.rotation_euler.z = rotation

bpy.data.scenes["Scene"].render.filepath = "D:/Comp Sci III/Blender App/renders/"
bpy.ops.render.render(write_still = True)

bpy.ops.object.select_all(action='SELECT')
bpy.ops.object.delete(use_global = False)

